import { render } from "@testing-library/react";
import ReportPage from "@src/components/reports/lastfm/common/report.page/report.page";
import Top20TracksReport from "@src/components/reports/lastfm/top20.tracks/top20.tracks.container";
import routes from "@src/config/routes";
import FourOhFour from "@src/pages/404";
import Page from "@src/pages/reports/lastfm/top20tracks";
import mockCheckCall from "@src/tests/fixtures/mock.component.call";
import getPageProps from "@src/utils/page.props.static";

jest.mock("@src/utils/page.props.static", () => jest.fn());

jest.mock("@src/components/reports/lastfm/common/report.page/report.page", () =>
  createMockedComponent("ReportPage")
);

jest.mock(
  "@src/components/reports/lastfm/top20.tracks/top20.tracks.container",
  () => createMockedComponent("Top20TracksReport")
);

jest.mock("@src/pages/404", () => createMockedComponent("FourOhFour"));

const createMockedComponent = (name: string) => {
  const {
    factoryInstance,
  } = require("@src/tests/fixtures/mock.component.children.factory.class");
  return factoryInstance.create(name);
};

describe("getStaticProps", () => {
  it("should be generated by the correct call to pagePropsGenerator", () => {
    expect(getPageProps).toBeCalledTimes(1);
    expect(getPageProps).toBeCalledWith({
      pageKey: "lastfm",
      translations: ["cards", "lastfm"],
    });
  });
});

describe(routes.reports.lastfm.top20tracks, () => {
  beforeEach(() => jest.clearAllMocks());

  const arrange = () => {
    render(<Page />);
  };

  describe("when rendered", () => {
    beforeEach(() => {
      arrange();
    });

    it("should call the ReportPage correctly", () => {
      expect(ReportPage).toBeCalledTimes(1);
      mockCheckCall(
        ReportPage,
        {
          ReportContainer: Top20TracksReport,
          NoUserComponent: FourOhFour,
        },
        0,
        ["stateReset"]
      );
    });
  });
});
