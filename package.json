{
  "name": "top20-nextjs",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "postinstall": "cd ./node_modules/@toplast/lastfm && yarn add -D typescript@4.8.4 && yarn install && yarn run build",
    "build": "next build",
    "build:validators": "ts-node $(find src/vendors/integrations/api.validation -name compile.ts)",
    "clean": "eslint --fix ./src ./cypress; prettier --trailing-comma=es5 --write \"./(src|cypress)/**/*.+(ts|tsx|js|jsx|json|yml|yaml|css|scss|md|vue)\"",
    "compile": "npm --version && tsc --version && tsc",
    "coverage": "jest test --coverage --coverageDirectory=coverage --watchAll=false",
    "dev": "next dev",
    "lint": "eslint ./src ./cypress",
    "newkey": "jose newkey -s 256 -t oct -a HS512",
    "netlify:ci": "npm install --unsafe-perm=true netlify-cli -g",
    "security": "audit-ci --config .audit-ci.json",
    "smoke:ci": "npm run smoke:env && npm run smoke:run",
    "smoke:dev": "cypress open",
    "smoke:env": "ts-node cypress/utils/build.config.ts",
    "smoke:run": "cypress run --e2e --headless --config video=false,screenshotOnRunFailure=false",
    "start": "next start",
    "start:container": "[[ -n \"${ENV_LOCAL_MOUNT}\" ]] && cp \"${ENV_LOCAL_MOUNT}\" .env.local; next start",
    "test": "jest --watch"
  },
  "overrides": {
    "@babel/traverse": ">=7.23.2",
    "axios": ">=0.21.2",
    "eslint-plugin-unused-imports": {
      "@typescript-eslint/eslint-plugin": "^5.0.0"
    },
    "json-schema": " >=0.4.0",
    "node-fetch": "^2.7.0",
    "postcss": ">=8.4.31",
    "semver": ">=7.5.2",
    "tough-cookie": ">=4.1.3",
    "undici": ">=5.26.2",
    "use-persisted-reducer": {
      "react": "^18.0.0"
    }
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.435.0",
    "@chakra-ui/icons": "^2.0.0",
    "@chakra-ui/react": "^2.0.0",
    "@emotion/react": "^11.8.2",
    "@emotion/styled": "^11.6.0",
    "@toplast/lastfm": "https://github.com/niall-byrne/lastfm#dev",
    "ajv": "^8.12.0",
    "cheerio": "^1.0.0-rc.12",
    "d3": "^7.8.5",
    "flagsmith": "^3.20.0",
    "flagsmith-nodejs": "^3.1.1",
    "formik": "^2.4.5",
    "i18next": "^23.0.0",
    "js-cookie": "^3.0.1",
    "next": "^14.0.0",
    "next-auth": "^4.20.1",
    "next-connect": "^1.0.0",
    "next-i18next": "^15.0.0",
    "node-fetch": "^2.7.0",
    "react": "^18.0.0",
    "react-card-flip": "^1.2.2",
    "react-cookie-consent": "^9.0.0",
    "react-dom": "^18.0.0",
    "react-error-boundary": "^4.0.11",
    "react-ga4": "^2.1.0",
    "react-i18next": "^13.0.0",
    "react-icons": "^4.3.1",
    "react-social-login-buttons": "^3.9.1",
    "use-persisted-reducer": "^2.1.0"
  },
  "devDependencies": {
    "@emotion/jest": "^11.11.0",
    "@netlify/plugin-nextjs": "^4.41.1",
    "@swc/core": "^1.3.95",
    "@swc/jest": "^0.2.22",
    "@testing-library/jest-dom": "^5.16.5",
    "@testing-library/react": "^14.0.0",
    "@types/d3": "^7.4.2",
    "@types/jest": "^29.0.0",
    "@types/js-cookie": "^3.0.5",
    "@types/react": "^18.0.0",
    "@typescript-eslint/eslint-plugin": "^5.62.0",
    "@typescript-eslint/parser": "^5.62.0",
    "audit-ci": "^6.6.1",
    "cypress": "^13.0.0",
    "deep-keys": "^0.5.0",
    "eslint": "^7.32.0",
    "eslint-config-next": "^12.3.4",
    "eslint-plugin-jest": "^27.4.3",
    "eslint-plugin-jest-formatting": "^3.1.0",
    "eslint-plugin-react": "^7.33.2",
    "eslint-plugin-unused-imports": "^1.1.5",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.0.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-specific-snapshot": "^8.0.0",
    "next-router-mock": "^0.9.10",
    "node-jose-tools": "^2.0.2",
    "node-mocks-http": "^1.13.0",
    "prettier": "^3.0.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^4.6.3"
  },
  "engines": {
    "npm": "^9.0.0",
    "node": "^18.18.2"
  },
  "jest": {
    "collectCoverageFrom": [
      "<rootDir>/src/**/*.{js,jsx,ts,tsx}",
      "!<rootDir>/src/vendors/integrations/api.validation/**/generated.js",
      "!<rootDir>/src/**/implementations/concrete*.{js,jsx,ts,tsx}",
      "!<rootDir>/src/tests/fixtures/**/*.{js,jsx,ts,tsx}",
      "!<rootDir>/src/**/tests/**/*.types\\.check.{ts,tsx}"
    ],
    "coveragePathIgnorePatterns": [],
    "coverageReporters": [
      "text",
      "html"
    ],
    "coverageThreshold": {
      "global": {
        "statements": 100,
        "branches": 100,
        "functions": 100,
        "lines": 100
      }
    },
    "globalSetup": "<rootDir>/jest/globalSetup.js",
    "setupFilesAfterEnv": [
      "<rootDir>/jest/setup/emotion.js",
      "<rootDir>/jest/setup/fetch.js",
      "<rootDir>/jest/setup/snapshot.js",
      "<rootDir>/jest/setup/text.js",
      "<rootDir>/jest/setup/testing-library.js"
    ],
    "moduleNameMapper": {
      ".+\\.(css|styl|less|sass|scss)$": "identity-obj-proxy",
      ".+\\.(png|jpg|ttf|woff|woff2)$": "<rootDir>/jest/modules/images.js",
      "^@fixtures/chakra$": "<rootDir>/src/fixtures/mocks/mock.chakra.react.factory.class.tsx",
      "^@fixtures/chakra/icons$": "<rootDir>/src/fixtures/mocks/mock.chakra.icon.factory.class.tsx",
      "^@fixtures/react/child$": "<rootDir>/src/fixtures/mocks/mock.component.child.factory.class.tsx",
      "^@fixtures/react/parent$": "<rootDir>/src/fixtures/mocks/mock.component.parent.factory.class.tsx",
      "^@fixtures/react/simple$": "<rootDir>/src/fixtures/mocks/mock.component.simple.factory.class.tsx",
      "^@JestConfig/(.*)": "<rootDir>/jest/$1",
      "^@locales/(.*)": "<rootDir>/public/locales/en/$1",
      "^@src/(.*)": "<rootDir>/src/$1",
      "^@panva/hkdf": "@panva/hkdf",
      "^d3": "<rootDir>/node_modules/d3/dist/d3.min.js",
      "^preact": "preact",
      "^jose$": "jose",
      "^uuid$": "uuid"
    },
    "roots": [
      "./src"
    ],
    "modulePathIgnorePatterns": [
      "<rootDir>/src/.*/__mocks__"
    ],
    "testEnvironment": "jsdom",
    "transform": {
      "^.+\\.(t|j)sx?$": [
        "@swc/jest",
        {
          "sourceMaps": "inline",
          "jsc": {
            "parser": {
              "syntax": "typescript",
              "tsx": true,
              "decorators": false,
              "dynamicImport": false
            },
            "transform": {
              "react": {
                "runtime": "automatic"
              }
            }
          }
        }
      ]
    },
    "verbose": true
  }
}
